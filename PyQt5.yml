                                               Qt Desinger   学习手册
1.在编辑模式下，可以直接用鼠标把小部件拖动到窗口中任意位置，如果要快速复制（克隆）的话。可以按住Ctrl键，拖动就可以
  所有从 QObject 或其子类 ( 例如 Qwidget) 派生的类都能够包含信号和槽
  
  
  
2.在信号与插槽模式下，可以拖动鼠标把两个小部件连接起来，信号起始端为发送者，发送的是信号；末端是接受者，接受的是槽（slot）
   可以连接到表单本身，之后会显示接地符号
3.编辑伙伴模式
当用户激活标签的快捷键时，鼠标/键盘的焦点将会转移到它的伙伴窗口部件上。 
QT对象中只有QLabel标签对象才可以有伙伴窗口部件，也只有QLabel对象具有快捷键时，伙伴关系才有效。 
实际作用则是方便用户利用快捷键快速输入表单内容，目前一般很少用这种设计了…

4.编辑Tab键顺序：
点击出现的数字，改变按下Tab键的选中顺序

5.垂直，水平布局啥的，可以按住Ctrl选中多个控件，然后选择是水平布局或者垂直布局或者其他的

6.Gridlayout  网格布局    
7.form layout   表单布局  一般是左边是提示性文字，右边是输入或者选项
8.Spacer  可以用来调整控件之间的距离
9.垂直/水平Line  可以让控件之间有分割线

10.sizePolicy 尺寸策略    可以用于在水平布局（horizonal layout）/垂直布局（vertical layout）中，
划分控件所占布局的比列。 比如，在水平布局中，水平策略那一栏选择Expanding ，如果要占布局的2/3，
则水平伸展设置为2；另一个水平伸展设置为1；垂直布局类推


11.有三种窗口类型：
QMainWindow:可以包含菜单栏、工具栏、状态栏和标题栏，是最常见的窗口形式
QDialog:是对话框的基类。
QWidget:不确定窗口的用途，就使用它。


12. 让屏幕居中，编写如下函数，一定要在__init__中初始化----------self.center
    def center(self):
        #获取屏幕的坐标
        screen=QDesktopWidget().screenGeometry()  #导入QDesktopWidget模块
        #获取窗口的坐标
        size=self.geometry()
        newTop=(screen.height()-size.height())/2
        newLeft=(screen.width()-size.width())/2
        #移动到指定位置
        self.move(newLeft,newTop)
        
13.  用Ot Desinger设计窗口，生成的UI文件转化为.py文件后，再创建一个文件，把转化的文件导入到现有文件中，
并且在末尾加上if语句
     import first   #导入生成的模块（文件）

     if __name__ == '__main__':   #确保if一下的语句只在当前窗口下运行
        app=QApplication(sys.argv)    #创建一个应用（创建一个QAPPlication类实列）
        mainWindow=QMainWindow()      #创建一个主窗口
        ui = first.Ui_MainWindow()    #创建一个类实例， 文件名+类名
        ui.setupUi(mainWindow)        #向主窗口上添加控件，入口参数是mainWindow
        mainWindow.show()             #显示主窗口
        sys.exit(app.exec_())         #进入程序主循环，并通过exit()函数确保主循环安全退出

14.设置git \pycharm \github 的网址:https://www.cnblogs.com/fanyuchen/p/7149974.html
首先：通过pycharm在github中创建一个repository,-----VCS/Import Into Versioncontrol/share porject to github
然后：把代码上传到git，setting-git-commiting Files ----commit and push
最后：把本地修改同步到github上，点击setting--git--repository--push


 

